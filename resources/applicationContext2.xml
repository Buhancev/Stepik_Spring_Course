<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">


    <bean id = "myPet"
          class="spring_introduction.Dog"
          init-method="init"
          destroy-method="destroy"
          scope="prototype">
          <!-- Методы init и destroy
          У данных методов access modifier может быть любым (public, private, protected)
          у данных методов return type может быть любым. Но так как возвращаемое значение
          мы никак не может использовать(Spring сам вызывает автоматически),
          то чаще всего - void.
          данные методы могут называться как угодно (в отличии от set и get)
          у данных методов не должно быть параметров
          -->


        <!-- scope = "prototype"
        bean'ы создаются каждый роз, когда достаем из контейнера(если не достали, то нет
        ни одного bean'a.
        Для каждого обращения - новый bean
        Подходид для stateful-object (bean'ы которые хранят которое состояние
        например, имя собаки)


        Если scope не указываем, то он default = singleton, то есть bean создается
        даже если мы его не запрашиваем.
        То есть жизненный цикл начинается с чтения файла конфига Spring Container'ом,
        является общим для всех, кто запросит его у Spring Container'a
        и подходит для stateless объектов (stateless-object - объекты состояние которых
        не приходится менять, и нужен всего один единственный bean)-->
    </bean>

</beans>
